========================================================================
    CONSOLE APPLICATION : 12_ipchello Project Overview
========================================================================

This project demonstrates the use of public service in a multi-tasking / multi-processing environment.
The project consits of 3 separate sub-projects:
    1. shripchello (12_shripchello) -- is a static library, collection ultra-small server and client servicing object used by other processes.
	2. svcipchello (12_svcipchello) -- is a console application, contains instance of public service.
	3. usripchello (12_usripchello) -- is a console application, contains service client.

All communications pass through mcrouter (multi-casting router). Regardless it is recommended that in IPC to start the "mcrouter" first,
since in AREG SDK the service discovery is automatic, it does not matter the order of processes to start. The system will start working 
when mcrouter process is available and as soon as client and server nodes get logical connection, the communication starts.
This approach forms a mist network and provides mist-computing on extreme edge, and extends fog network.

////////////////////////////////////////////////////////////////////////

        1. Project 'shripchello' / 12_shripchello
        
The 'shripchello' project contains collection of generated server and client objects, which are used in other applications.
The classes are generated from "./res/HelloWorld.siml" document created with design tool (right now in progress) and generated by 
code generator (see in "tools" subfolder).

////////////////////////////////////////////////////////////////////////

        2. Project 'svcipchello' / 12_svcipchello
        
The 'svcipchello' project contains instance of public service, which is discoverable in the netwok. The connected clients should specify the name of
service they wait and as soon as the service is available in the network, the clients get notification and can start triggering requests to run on logical server.

////////////////////////////////////////////////////////////////////////

        3. Project 'usripchello' / 12_usripchello
        
The 'usripchello' project contains instance of client, which can trigger request calls on logical server.
When clients are created, they need to specify the name of service (role name) they are going to use.
Assoon as the service is available in the network, clients get notification anc can start communication.
