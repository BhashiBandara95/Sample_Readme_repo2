========================================================================
    CONSOLE APPLICATION : 13_ipcmix Project Overview
========================================================================

This project demonstrates the use of mixture and multiple instances of local and public services.
13_ipcmix is an extension of 12_ipchello to create complex network of services and provide IPC.
This formes mesh of services and enables distributed computing.

The project consits of 4 separate sub-projects:
    1. shareipcmix  (13_shareipcmix ) -- is a static library, contains collection of ultra-small server and client servicing object, which are used by others.
    2. mainipcmix   (13_mainipcmix  ) -- is a console application, contains instances of public and local services, local service clients.
    3. secondipcmix (13_secondipcmix) -- is a console application, contains instances of public and local services, as well as public and local service clients.
    4. clientipcmix (13_clientipcmix) -- is a console application, contains instances of local services and public service clients.

All communications pass through mcrouter (multi-casting router). Regardless it is recommended that in IPC to start the "mcrouter" first,
since in AREG SDK the service discovery is automatic, it does not matter the order of processes to start. The system will start working 
when mcrouter process is available and as soon as client and server nodes get logical connection, the communication starts.
This approach forms a mist network and provides mist-computing on extreme edge, and extends fog network.

Since public services use the same service interface, they all musht have unique names (service name / role name). Public services are used for IPC.
The name of local service must be unique only within process. So that, all processes have same local service for multi-threading communication.

////////////////////////////////////////////////////////////////////////

        1. Project 'shareipcmix' / 13_shareipcmix
        
The 'shareipcmix' project contains collection of generated server and client objects, which are used in other applications.
The classes are generated from service interface design documents located in "res" subfolder of areg-sdk.
The documents are created with design tool (right now in progress) and generated by code generator (see in "tools" subfolder).

////////////////////////////////////////////////////////////////////////

        2. Project 'mainipcmix' / 13_mainipcmix
        
The 'mainipcmix' project contains instance of main service component, which controls system shutdown procedure.
It as well contains local service and local client. The local service is unique in the process, but same object with the same name
is instantiated in other processes.

The application waits for certain amount of request calls and triggers system shutdown, so that, all processes complete job.

////////////////////////////////////////////////////////////////////////

        3. Project 'secondipcmix' / 13_secondipcmix
        
The 'secondipcmix' project contains instance public and local services that communicate with Main Service (to be notified for shutdown)
and communicate with other services. The process as well has local clients of local and public services. The public services are used 
not only for IPC, but can be as used for multi-threading communication. Within local process, the server and the client of public service
behave identical to local service.

////////////////////////////////////////////////////////////////////////

        4. Project 'clientipcmix' / 13_clientipcmix
        
The 'clientipcmix' project contains instances of clients of all public services to interact.
It as well contains local service and client for multi-threading communication.
